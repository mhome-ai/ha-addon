name: Release Addon

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 0.2.0)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate version format
        run: |
          VERSION="${{ github.event.inputs.version }}"
          if [[ ! $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Version must be in format X.Y.Z (e.g., 0.2.0)"
            exit 1
          fi
          echo "Version format is valid: $VERSION"

      - name: Check if version already exists
        run: |
          VERSION="${{ github.event.inputs.version }}"
          if git rev-parse "v$VERSION" >/dev/null 2>&1; then
            echo "Error: Version v$VERSION already exists"
            exit 1
          fi
          echo "Version v$VERSION is available"

      - name: Verify Docker image exists
        run: |
          VERSION="${{ github.event.inputs.version }}"
          
          echo "Checking if Docker image exists for version $VERSION..."
          
          # Check if image exists in registry
          if docker manifest inspect ghcr.io/mhome-ai/ha-addon:$VERSION >/dev/null 2>&1; then
            echo "‚úÖ Docker image ghcr.io/mhome-ai/ha-addon:$VERSION is available"
          else
            echo "‚ùå Error: Docker image ghcr.io/mhome-ai/ha-addon:$VERSION not found"
            echo "Please ensure the image is built and pushed before releasing"
            exit 1
          fi

      # -------------------------------------------------------------------
      # Bring in the canonical CHANGELOG from the source code repository
      # -------------------------------------------------------------------
      - name: Checkout source repository for changelog
        uses: actions/checkout@v4
        with:
          # Repository that contains the authoritative CHANGELOG.md
          repository: mhome-ai/home-assistant-addon  # <-- adjust if repo name differs
          # Fetch the tag that matches the version we are releasing
          ref: "refs/tags/v${{ github.event.inputs.version }}"
          path: core

      - name: Copy CHANGELOG into add-on folder
        run: |
          cp core/CHANGELOG.md mhome/CHANGELOG.md
          echo "CHANGELOG synced from source repository"

      - name: Check if version needs updating
        id: version_check
        run: |
          VERSION="${{ github.event.inputs.version }}"
          CURRENT_VERSION=$(grep "version:" mhome/config.yaml | cut -d'"' -f2)
          
          echo "Current version: $CURRENT_VERSION"
          echo "Target version: $VERSION"
          
          if [ "$CURRENT_VERSION" = "$VERSION" ]; then
            echo "Version is already $VERSION, no update needed"
            echo "needs_update=false" >> $GITHUB_OUTPUT
          else
            echo "Version needs to be updated from $CURRENT_VERSION to $VERSION"
            echo "needs_update=true" >> $GITHUB_OUTPUT
          fi

      - name: Update addon configuration
        if: steps.version_check.outputs.needs_update == 'true'
        run: |
          VERSION="${{ github.event.inputs.version }}"
          
          # Update version in mhome/config.yaml
          sed -i "s/version: \".*\"/version: \"$VERSION\"/" mhome/config.yaml
          
          # Verify the change
          grep "version:" mhome/config.yaml
          
          echo "Updated addon configuration to version $VERSION"

      - name: Commit version update and create tag
        run: |
          VERSION="${{ github.event.inputs.version }}"
          
          git config --local user.email "action@github.com"
          git config --local user.name "Release Action"
          
          # Only commit if there are changes
          if git status --porcelain | grep -qE "mhome/config.yaml|mhome/CHANGELOG.md"; then
            git add mhome/config.yaml mhome/CHANGELOG.md
            git commit -m "Release version $VERSION"
            git push
          fi
          
          # Create tag (even if no config changes)
          git tag "v$VERSION"
          git push origin "v$VERSION"
          
          echo "Created and pushed tag v$VERSION"

      - name: Summary
        run: |
          VERSION="${{ github.event.inputs.version }}"
          echo "‚úÖ Successfully updated mHome addon to version $VERSION"
          echo "üê≥ Docker image: ghcr.io/mhome-ai/ha-addon:$VERSION"
          echo "üì¶ Git tag: v$VERSION"
          echo "üè† Home Assistant users will see the update available in the Add-on Store" 